after_success:
  - pip install coveralls
  - coveralls

stages:
  - test
  - name: deploy
    if:
      tag IS present AND repo = adamltyson/cellfinder

jobs:
  include:
    - stage: test
      name: "Ubuntu Bionic python 3.7"
      language: python
      os: linux
      dist: bionic
      python: 3.7
      script: travis_wait 40 bash travis/install_test_linux.sh
    - stage: test
      name: "Ubuntu Bionic python 3.8"
      language: python
      os: linux
      dist: bionic
      python: 3.8
      script: travis_wait 40 bash travis/install_test_linux.sh
    - stage: test
      name: "Ubuntu Xenial python 3.8"
      language: python
      os: linux
      dist: xenial
      python: 3.7
      script: travis_wait 40 bash travis/install_test_linux.sh
    - stage: test
      name: "Windows Python 3.7"
      language: shell
      env: TRAVIS_PYTHON_VERSION=3.7
      os: windows
      before_install:
        - source travis/install_windows.sh
      script: travis_wait 40 bash travis/test_windows.sh
    - stage: test
      name: "Windows Python 3.8"
      language: shell
      env: TRAVIS_PYTHON_VERSION=3.8
      os: windows
      before_install:
        - source travis/install_windows.sh
      script: travis_wait 40 bash travis/test_windows.sh
#    - stage: test
#      name: "macOS Python 3.7"
#      os: osx
#      language: shell
#      env: TRAVIS_PYTHON_VERSION=3.7
#      script: travis_wait 40 bash travis/install_test_osx.sh
    - stage: deploy
      name: "Deploy Linux (py37 & py38)"
      language: python
      services:
        - docker
      script:
        - mkdir pypi_upload
        - python setup.py sdist
        - cp dist/* pypi_upload/
        - docker run --rm -v $(pwd):/io quay.io/pypa/manylinux2014_x86_64 /io/travis/build_linux_wheels.sh
        - cp wheelhouse/manylinux/* pypi_upload/
      after_success:
        - pip install twine
        - ls pypi_upload/*
        - twine upload pypi_upload/* --skip-existing
    - stage: deploy
      name: "Deploy Windows (py37)"
      language: shell
      env: TRAVIS_PYTHON_VERSION=3.7
      os: windows
      before_install:
        - source travis/install_windows.sh
      script:
        - source travis/build_windows_wheels.sh
      after_success:
        - pip install twine
        - twine upload dist/* --skip-existing
    - stage: deploy
      name: "Deploy Windows (py38)"
      language: shell
      env: TRAVIS_PYTHON_VERSION=3.8
      os: windows
      before_install:
        - source travis/install_windows.sh
      script:
        - source travis/build_windows_wheels.sh
      after_success:
        - pip install twine
        - twine upload dist/* --skip-existing
#    - stage: deploy
#      name: "Deploy macOS (py36)"
#      language: shell
#      env: TRAVIS_PYTHON_VERSION=3.6
#      os: osx
#      osx_image: xcode9.2   #macOS 10.12
#      script: bash travis/install_build_wheels_osx.sh
#    - stage: deploy
#      name: "Deploy macOS (py37)"
#      language: shell
#      env: TRAVIS_PYTHON_VERSION=3.7
#      os: osx
#      osx_image: xcode9.2   #macOS 10.12
#      script: bash travis/install_build_wheels_osx.sh
notifications:
  email:
    recipients:
    - adam.tyson@ucl.ac.uk
    on_success: change
    on_failure: always

env:
  global:
    - TWINE_USERNAME=__token__
    # TWINE_PASSWORD is set to a PyPI API token in Travis settings
